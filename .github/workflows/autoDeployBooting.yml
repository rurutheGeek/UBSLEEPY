name: bootingRaspi
on:
  push:
    branches: 
      - main
  workflow_dispatch:
jobs:
  deploy:
    name: booting
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - uses: actions/checkout@v2
      
      - name: Check dotenv setup
        run: |
          echo "現在の作業ディレクトリ: $(pwd)"
          echo ".envファイルの存在確認: $(ls -la | grep .env || echo '.envファイルが見つかりません')"
          echo "Pythonバージョン: $(python3 --version)"
          echo "dotenvパッケージの確認: $(pip3 list | grep python-dotenv || echo 'python-dotenvがインストールされていません')"
          
          # 簡単なテストスクリプトで.envファイルが読み込めるか確認
          cat > test_dotenv.py << 'EOF'
          import os
          from dotenv import load_dotenv
          
          print("dotenvテスト開始")
          print(f"カレントディレクトリ: {os.getcwd()}")
          print(f".envファイルの存在: {os.path.exists('.env')}")
          
          result = load_dotenv()
          print(f"load_dotenv()の結果: {result}")
          
          # 環境変数の一部をチェック（値は表示しない）
          test_var = "DISCORD_TOKEN"
          print(f"{test_var}が設定されているか: {test_var in os.environ}")
          EOF
          
          # テストスクリプトを実行
          python3 test_dotenv.py
      
      - name: deploy
        run: |
          #!/bin/sh
          
          echo ...UBSLEEPY deploying...
          cd /home/ruru/UBSLEEPY/
          git reset --hard
          git --git-dir=.git pull origin main
          echo pull ok.
          
          # .envファイルの確認
          echo "デプロイ先での.envファイル確認："
          ls -la | grep .env || echo '.envファイルが見つかりません'
          
          echo ...UBSLEEPY restarting...
          if pgrep -f "main.py" > /dev/null; then
              pkill -f "main.py"
              echo killed.
          else
              echo not killed.
          fi
          
          # 環境変数を明示的に表示（トークン値は表示しない）
          echo "環境変数DISCORD_TOKENが設定されているか: $([ -n "$DISCORD_TOKEN" ] && echo 'はい' || echo 'いいえ')"
          
          RUNNER_TRACKING_ID="" && nohup python3 main.py > log/nohup_stdout.log 2> log/nohup_system.log&
          echo boot ok.
          
          # 起動後すぐのログを確認
          sleep 2
          echo "直近のログ出力（エラーがあれば表示されます）："
          tail -n 10 log/nohup_system.log
